// set up of ports
const int firePinIn = A0; //
const int rhSensPinIn = A1; // in normal 90
const int gasSensPinIn = A2; // in normal 60
const int movementPinInTrig = A3; //
const int movementPinInEcho = A4; //


const int alarmRedPinOut = 0; //
const int alarmGrPinOut = 1; //
const int lockLedPinOut = 2; //
const int gasFanPinOutINA = 11;
const int gasFanPinOutINB = 10; //
const int exhaustFanPinOutINA = 8; //
const int exhaustFanPinOutINB = 9; 

//Inputs for SCADA

const int fireStatus = 5; //D5 on leo -> D5 on nano
//const int gasFanStatus = 3;
//const int exhaustFanStatus = ;
//const int lockLedStatus = ;
const int movementStatus = 4; //D4 on leo -> D4 on nano

//const int rhSensStatus = ;
//const int gasSensStatus = ;


// set up variables
// boolean sensTempIn = false; 
// boolean sensCOIn = false;  
// boolean moveInRoom = false; 
// boolean alarmOn = false; 
// boolean lockDoor = false; 

boolean fireExtinguished = false;
int i = 0;

void setup() {
  // put your setup code here, to run once:
  //analog in
  pinMode(firePinIn, INPUT);
  pinMode(rhSensPinIn, INPUT);
  pinMode(gasSensPinIn, INPUT);
  pinMode(movementPinInTrig, INPUT);
  pinMode(fireStatus, OUTPUT);
  pinMode(movementStatus, OUTPUT);

  //digital out
  pinMode(alarmRedPinOut, OUTPUT);
  pinMode(alarmGrPinOut, OUTPUT);
  pinMode(lockLedPinOut, OUTPUT);
  pinMode(gasFanPinOutINA, OUTPUT);
  pinMode(gasFanPinOutINB, OUTPUT);
  pinMode(exhaustFanPinOutINA, OUTPUT);
  pinMode(exhaustFanPinOutINB, OUTPUT);

  digitalWrite(alarmRedPinOut, LOW);
  digitalWrite(alarmGrPinOut, LOW);
  digitalWrite(lockLedPinOut, HIGH);
  digitalWrite(gasFanPinOutINA, HIGH);
  digitalWrite(gasFanPinOutINB, HIGH);
  digitalWrite(exhaustFanPinOutINA, HIGH);
  digitalWrite(exhaustFanPinOutINB, HIGH);
  digitalWrite(fireStatus, LOW);
  digitalWrite(movementStatus, LOW);

}

void loop() {


  setup();
  Serial.println("Setup Done.");
  
 if (!fireExtinguished)
 {
    Serial.println("Inside First If");
    Serial.println("CO Sensor:" + String(analogRead(rhSensPinIn)));
    Serial.println("Gas Sensor:" + String(analogRead(gasSensPinIn)));
    Serial.println("Fire Sensor:" + String(analogRead(firePinIn)));

    if (int(analogRead(firePinIn)) < 800) // if flame
    {
      Serial.println("Fire Detected");
      Serial.println("Fire Sens:" + String(analogRead(firePinIn)));

      delay(3000); // wait for 10 sec

      Serial.println("CO Sensor:" + String(analogRead(rhSensPinIn)));

      if (int(analogRead(firePinIn)) < 800) { // && int(analogRead(rhSensPinIn)) > 50){

        Serial.println("Fire and Smoke Detected");
        digitalWrite(fireStatus, HIGH);

        digitalWrite(alarmRedPinOut, HIGH);
        digitalWrite(lockLedPinOut, LOW);
        delay(800);

        int timeChecker = 0;

        Serial.println("Detecting movement");

        while (timeChecker < 5) { // while there is motion inside we should wait
          if (analogRead(movementPinInTrig) > 50) {

            //Serial.println("Yes, there is the move inside. Wait for 20 seconds");
            //delay(800);
            timeChecker = 100;
            digitalWrite(movementStatus, HIGH);
          }
          timeChecker++;
          delay(800);
        }

        Serial.println("No movement detected. Releasing Inergen gas. Turn pump on");
        digitalWrite(movementStatus, LOW);
        
        digitalWrite(gasFanPinOutINB, HIGH); // release gas inside
        digitalWrite(gasFanPinOutINA, LOW);
        delay(5000); // wait 10 sec while gas occupy all room


        digitalWrite(gasFanPinOutINB, HIGH); // stop releasing Gas
        digitalWrite(gasFanPinOutINA, HIGH);

        Serial.println("Gas released. Fire suppressed. Turn pump off.");

        delay(5000); // wait when fire stops

        digitalWrite(fireStatus, LOW);
        Serial.println("Turning on Exhaust");


        digitalWrite(exhaustFanPinOutINB, HIGH); // exhaust gas out of room
        digitalWrite(exhaustFanPinOutINA, LOW);

        delay(5000);
        //while(analogRead(gasSensPinIn) > 200){ //  should be analogRead(rhSensPinIn)
         // delay(800); // wait for 5 sec
         // }

        while (analogRead(firePinIn) < 800)
        {
          delay(800);
        }

        Serial.println("Gas exhausted. Turning off exhaust");
        delay(2000);

        digitalWrite(exhaustFanPinOutINB, HIGH); // // turn off motors for exhausting
        digitalWrite(exhaustFanPinOutINA, HIGH);

        int i = 0;
        digitalWrite(lockLedPinOut, HIGH);// anyway should be opened due to CO gone away

        Serial.println("Checking for flame inside");
        delay(2000);

        while (analogRead(firePinIn) < 800) { // if fire still inside alarm cannot be turn off  // should be  analogRead(tempSensPinIn)

          Serial.println("Fire still present");
          digitalWrite(fireStatus, HIGH);
          delay(2000);

          delay(500);
          i++;// wait 5sec fire should gone away
          if (i > 10 ) break;
        }
        digitalWrite(alarmRedPinOut, LOW); // no fire inside we can turn alarm off
        digitalWrite(fireStatus, LOW);
        fireExtinguished = true;
      }
    }
 
  }
 delay(800);  // wait for 10 sec
  
}